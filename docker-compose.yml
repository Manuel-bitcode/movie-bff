version: '3.8'

services:
  # ====================================
  # Servicio PostgreSQL
  # ====================================
  postgres:
    # Imagen personalizada en Docker Hub con datos inicializados
    # También disponible: postgres:16-alpine (sin datos)
    image: wilmerleon/movie-bff-postgres:latest
    container_name: movie-bff-postgres
    restart: unless-stopped
    
    # Variables de entorno para PostgreSQL
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-1234}
      POSTGRES_DB: ${DB_NAME:-movie_bff}
    
    # Mapeo de puertos
    ports:
      - "${DB_PORT:-5433}:5432"
    
    # Volúmenes para persistencia y script de inicialización
    volumes:
      # Montar script de inicialización (se ejecuta automáticamente)
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      # Persistir datos de la base de datos
      - postgres_data:/var/lib/postgresql/data
    
    # Health check para PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    # Configuración de logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ====================================
  # Servicio Backend
  # ====================================
  app:
    container_name: movie-bff
    build: 
      context: .
      dockerfile: Dockerfile
    
    ports:
      - "${PORT:-3004}:${PORT:-3004}"
    
    environment:
      - DOCKER_ENV=true
      - PORT=${PORT:-3004}
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - OMDB_API_KEY=${OMDB_API_KEY:-}
    
    depends_on:
      postgres:
        condition: service_healthy
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${PORT:-3004}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# ====================================
# Volúmenes
# ====================================
volumes:
  postgres_data:
    driver: local