version: '3.8'

services:
  app:
    # Nombre del contenedor (aparece en 'docker ps')
    container_name: movie-bff
    
    # Configuración de construcción de la imagen
    build: 
      context: .              # Usa el directorio actual como contexto
      dockerfile: Dockerfile  # Archivo Dockerfile a usar
    
    # Mapeo de puertos: host:contenedor
    # ${PORT:-3001}
    ports:
      - "3001:3001"
    
    # Variables de entorno que se pasan al contenedor
    environment:
      - PORT=${PORT:-3001}              # Puerto de la aplicación (default: 3001)
      - NODE_ENV=${NODE_ENV:-production} # Entorno de Node.js (default: production)
      - API_KEY=${API_KEY:-}             # API Key opcional (default: vacío)
    
    networks:
      movie-network:
        aliases:
          - movie-bff
    
    # Política de reinicio: se reinicia automáticamente si falla
    # Opciones: "no", "always", "on-failure", "unless-stopped"
    restart: unless-stopped
    
    # Health Check: verifica que la aplicación esté funcionando
    healthcheck:
      # Comando que ejecuta para verificar salud (debe retornar 0 si OK)
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s      # Cada cuánto tiempo verifica (cada 30 segundos)
      timeout: 10s       # Tiempo máximo de espera por respuesta
      retries: 3         # Intentos antes de marcar como "unhealthy"
      start_period: 40s  # Tiempo de gracia inicial antes de empezar a verificar
    
    # Configuración de logs para evitar que crezcan infinitamente
    logging:
      driver: "json-file"  # Tipo de driver de logs
      options:
        max-size: "10m"    # Tamaño máximo por archivo de log (10 megabytes)
        max-file: "3"      # Número máximo de archivos de log (mantiene 3)

networks:
  movie-network:
    external: true